{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","value","onChange","PersonForm","handleAdd","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","type","Person","name","number","deletePerson","onClick","Persons","persons","filter","person","RegExp","test","map","id","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Notification","message","className","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","successfulMessage","setSuccessfulMessage","errorMessage","setErrorMessage","useEffect","personsService","event","target","preventDefault","find","existPersonId","window","confirm","newPersons","setTimeout","catch","error","concat","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAWeA,EATA,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,mBAC1B,OACE,gCACE,mDACA,uBAAOC,MAAOF,EAAWG,SAAUF,QCU1BG,EAdI,SAAC,GAA6E,IAA3EC,EAA0E,EAA1EA,UAAWC,EAA+D,EAA/DA,QAASC,EAAsD,EAAtDA,iBAAkBC,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,mBACrE,OACE,uBAAMC,SAAUL,EAAhB,UACE,gCACE,yCAAW,uBAAOH,MAAOI,EAASH,SAAUI,OAC5C,2CAAa,uBAAOL,MAAOM,EAAWL,SAAUM,UAElD,8BACE,wBAAQE,KAAK,SAAb,uBCJOC,EAJA,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,aAC7B,OAAO,+BAAKF,EAAL,IAAYC,EAAZ,IAAoB,wBAAQE,QAASD,EAAjB,wBCuBdE,EAvBC,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASlB,EAA8B,EAA9BA,UAAWe,EAAmB,EAAnBA,aACrC,OACE,6BAEIG,EAAQC,QAAO,SAACC,GAEd,OADW,IAAIC,OAAOrB,EAAW,MACvBsB,KAAKF,EAAOP,SAErBU,KAAI,SAACH,GACJ,OACE,cAAC,EAAD,CAEEP,KAAMO,EAAOP,KACbC,OAAQM,EAAON,OACfC,aAAc,kBAAMA,EAAaK,EAAOI,MAHnCJ,EAAOI,U,gBCZtBC,EAAU,eAwBD,EArBA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAmB5B,EAfA,SAACC,GAEd,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVM,SAACN,GAEpB,OADgBE,IAAMO,OAAN,UAAgBR,EAAhB,YAA2BD,IAC5BI,MAAK,SAAAC,GAAQ,OAAIA,MAQnB,EALA,SAACL,EAAIO,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBD,GAAMO,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCb5BK,EARM,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,QAASzB,EAAU,EAAVA,KAC9B,OACE,qBAAK0B,UAAU,eAAf,SACE,mBAAGA,UAAW1B,EAAd,SAAqByB,OCqHZE,EAnHH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTrB,EADS,KACAsB,EADA,OAEcD,mBAAS,IAFvB,mBAETjC,EAFS,KAEAmC,EAFA,OAGkBF,mBAAS,IAH3B,mBAGT/B,EAHS,KAGEkC,EAHF,OAIkBH,mBAAS,IAJ3B,mBAITvC,EAJS,KAIE2C,EAJF,OAKkCJ,mBAAS,MAL3C,mBAKTK,EALS,KAKUC,EALV,OAMwBN,mBAAS,MANjC,mBAMTO,EANS,KAMKC,EANL,KAQhBC,qBAAU,WACRC,IAEGrB,MAAK,SAAAC,GACJW,EAAWX,QAEd,IAiFH,OACE,gCACE,4CACEe,GAAqB,cAAC,EAAD,CAAcR,QAASQ,EAAmBjC,KAAK,wBACpEmC,GAAgB,cAAC,EAAD,CAAcV,QAASU,EAAcnC,KAAK,kBAC5D,cAAC,EAAD,CAAQX,UAAWA,EAAWC,mBAlBP,SAACiD,GAC1BP,EAAaO,EAAMC,OAAOjD,UAkBxB,mDACA,cAAC,EAAD,CACEG,UA/EY,SAAC6C,GAMjB,GALAA,EAAME,iBAGclC,EAAQmC,MAAK,SAACjC,GAAD,OAAYA,EAAOP,OAASP,KAE5C,CACf,IAAMgD,EAAgBpC,EAAQmC,MAAK,SAACjC,GAAD,OAAYA,EAAOP,OAASP,KAASkB,GACpE+B,OAAOC,QAAP,UAAkBlD,EAAlB,+DAEF2C,EAAsBK,EAAe,CAAEzC,KAAMP,EAASQ,OAAQN,IAC3DoB,MAAK,SAAAC,GACJ,IAAM4B,EAAavC,EAAQK,KAAI,SAACH,GAC9B,OAAOA,EAAOI,KAAOK,EAASL,GAAKK,EAAWT,KAEhDoB,EAAWiB,GAEXZ,EAAqB,WAAD,OAAYhB,EAAShB,OACzC6C,YAAW,WACTb,EAAqB,QACpB,KAEHJ,EAAW,IACXC,EAAa,OAEdiB,OAAM,SAACC,GACNb,EAAgBa,EAAM/B,SAASC,KAAKM,SACpCsB,YAAW,WACTX,EAAgB,QACf,aAKTE,EACU,CAAEpC,KAAMP,EAASQ,OAAQN,IAChCoB,MAAK,SAAAC,GACJW,EAAWtB,EAAQ2C,OAAR,eAAoBhC,KAE/BgB,EAAqB,SAAD,OAAUhB,EAAShB,OACvC6C,YAAW,WACTb,EAAqB,QACpB,QAEJc,OAAM,SAAAC,GACLE,QAAQC,IAAIH,EAAM/B,UAClBkB,EAAgBa,EAAM/B,SAASC,KAAKM,SACpCsB,YAAW,WACTX,EAAgB,QACf,QAILN,EAAW,IACXC,EAAa,KA0BbpC,QAASA,EACTC,iBAzFmB,SAAC2C,GACxBT,EAAWS,EAAMC,OAAOjD,QAyFpBM,UAAWA,EACXC,mBAvFqB,SAACyC,GAC1BR,EAAaQ,EAAMC,OAAOjD,UAwFxB,yCACA,cAAC,EAAD,CAASgB,QAASA,EAASlB,UAAWA,EAAWe,aAxB1B,SAACS,GACtB+B,OAAOC,QAAQ,8CACjBP,EAA4BzB,GACzBI,MAAK,WACJY,EAAWtB,EAAQC,QAAO,SAACC,GAAD,OAAYA,EAAOI,KAAOA,gBC5F9DwC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c74c0603.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({newFilter, handleFilterChange}) => {\n  return (\n    <div>\n      <h3>filter shown with</h3>\n      <input value={newFilter} onChange={handleFilterChange}/>\n    </div>\n  )\n}\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ handleAdd, newName, handleNameChange, newNumber, handleNumberChange }) => {\n  return (\n    <form onSubmit={handleAdd}>\n      <div>\n        <div>name: <input value={newName} onChange={handleNameChange} /></div>\n        <div>number: <input value={newNumber} onChange={handleNumberChange} /></div>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = ({name, number, deletePerson}) => {\n  return <li>{name} {number} <button onClick={deletePerson}>delete</button></li>\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({ persons, newFilter, deletePerson }) => {\n  return (\n    <ul>\n      {\n        persons.filter((person) => {\n          const re = new RegExp(newFilter, 'gi');\n          return re.test(person.name);\n        })\n          .map((person) => {\n            return (\n              <Person\n                key={person.id}\n                name={person.name}\n                number={person.number}\n                deletePerson={() => deletePerson(person.id)}\n              />\n            )\n          })\n      }\n    </ul>\n  )\n}\n\nexport default Persons\n\n","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\n// getAll: get all people data from database\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\n// getAll: add a new contact into database\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteObject = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, deleteObject, update }","import React from 'react'\n\nconst Notification = ({message, type}) => {\n  return (\n    <div className=\"notification\">\n      <p className={type}>{message}</p>\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [successfulMessage, setSuccessfulMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  }\n\n  const handleAdd = (event) => {\n    event.preventDefault();\n\n    // If the person's information is already in the phonebook, the application confirm the action from the user:\n    const existPerson = persons.find((person) => person.name === newName)\n\n    if (existPerson) {\n      const existPersonId = persons.find((person) => person.name === newName).id;\n      if (window.confirm(`${newName} is already existed, replace the old number to a new one?`)) {\n        // update \n        personsService.update(existPersonId, { name: newName, number: newNumber })\n          .then(response => {\n            const newPersons = persons.map((person) => {\n              return person.id === response.id ? response : person\n            })\n            setPersons(newPersons)\n\n            setSuccessfulMessage(`Updated ${response.name}`)\n            setTimeout(() => {\n              setSuccessfulMessage(null)  \n            }, 2000)\n\n            setNewName('');\n            setNewNumber('');\n          })\n          .catch((error) => {\n            setErrorMessage(error.response.data.message)\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 2000)\n          })\n      } \n    } else {\n      // add the new name into the database\n      personsService\n        .create({ name: newName, number: newNumber })\n        .then(response => {\n          setPersons(persons.concat({ ...response }))\n          // Show successfully message and clear it after 2 second.\n          setSuccessfulMessage(`Added ${response.name}`)\n          setTimeout(() => {\n            setSuccessfulMessage(null)  \n          }, 2000)\n        })\n        .catch(error => {\n          console.log(error.response)\n          setErrorMessage(error.response.data.message)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 2000)\n        })\n\n        // Reset name and number input.\n        setNewName('');\n        setNewNumber('');\n    }\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value);\n  }\n\n  const handleDeletePerson = (id) => {\n    if (window.confirm(\"Do you really want to delete the contact?\")) {\n      personsService.deleteObject(id)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== id))\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {!successfulMessage || <Notification message={successfulMessage} type=\"successful-message\"/>}\n      {!errorMessage || <Notification message={errorMessage} type=\"error-message\"/>}\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange} />\n      <h2>Add a new contact</h2>\n      <PersonForm\n        handleAdd={handleAdd}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={persons} newFilter={newFilter} deletePerson={handleDeletePerson} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}